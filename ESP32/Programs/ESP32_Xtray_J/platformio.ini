; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

;
; Note [Unit Testing]
;
; We use two test environments: native and embedded.
;
; To select which tests to run where, we use a test hierarchy. See:
; https://docs.platformio.org/en/stable/advanced/unit-testing/structure/hierarchy.html#unit-testing-test-hierarchy.
;

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino
build_flags =
	-D CONTROLLER_XTRAY
	-D CONTROLLER_ESP
	-I src/components
	-I src/services
	-I src/utility
	-std=gnu++17
build_unflags = -std=gnu++11
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	bogde/HX711@^0.7.5
	rlogiacco/CircularBuffer@^1.3.3
	etlcpp/Embedded Template Library@^20.35.8
	adafruit/DHT sensor library@^1.4.4
	bblanchon/ArduinoJson@^6.20.0
	denyssene/SimpleKalmanFilter@^0.1.0
	trebledj/Serial-Tuning@^1.2.2
	densaugeo/base64@^1.4.0
monitor_speed = 115200
lib_ldf_mode = chain 			; Specify default (in case PIO becomes confused with other targets).
test_ignore =
	*

; pio test -vv -e esp32test
[env:esp32test]
platform = espressif32
board = esp32dev
framework = arduino
build_flags =
	-D CONTROLLER_XTRAY
	-D CONTROLLER_ESP
	-std=gnu++17
build_unflags = -std=gnu++11
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.7
	bogde/HX711@^0.7.5
	rlogiacco/CircularBuffer@^1.3.3
	etlcpp/Embedded Template Library@^20.35.8
	adafruit/DHT sensor library@^1.4.4
	bblanchon/ArduinoJson@^6.20.0
	denyssene/SimpleKalmanFilter@^0.1.0
	trebledj/Serial-Tuning@^1.2.2
	densaugeo/base64@^1.4.0
monitor_speed = 115200

; See Note [Unit Testing].
test_filter =
	embedded/components/*
lib_ldf_mode = deep+ ; Force PIO to find indirect lib dependencies.

[env:native]
; Native testing environment for running unit tests on your machine (not the embedded target).
; This is useful for testing classes/functions which are independent of embedded systems.
; Remember to switch your environment to native in the bottom bar.
; You can also open a PIO Core CLI and run `pio test -e native`.
platform = native
build_flags = 
	-std=c++17
	-Wno-c++14-extensions
	-Wno-c++17-extensions
lib_deps =
	etlcpp/Embedded Template Library@^20.35.8

; See Note [Unit Testing].
test_filter =
	native/*
test_ignore =
	embedded/*
